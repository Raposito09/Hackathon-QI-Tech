services:
  # Serviço do Banco de Dados PostgreSQL
  db:
    image: postgres:13
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: qitechdb
    ports:
      - "5432:5432" # Expor a porta para debug, se necessário
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # Mapeia o seu código-fonte local para dentro do container
      - ./backend-core/src:/app/src
      # Mapeia o seu pom.xml local para dentro do container
      - ./backend-core/pom.xml:/app/pom.xml

  # Serviço do Backend Core (Spring)
  core-api:
    build: ./backend-core-api  # Aponta para a pasta do projeto Spring
    ports:
      - "8080:8080"
    depends_on:
      - db # Garante que o DB inicie antes do backend
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/qitechdb
      - SPRING_DATASOURCE_USERNAME=user
      - SPRING_DATASOURCE_PASSWORD=password
      - ML_API_URL=http://ml-api:5000 # URL para comunicar com o serviço de ML

  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"  # API
      - "9001:9001"  # Console Web
    volumes:
      - minio_data:/data
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --console-address ":9001"

  create-bucket:
    image: amazon/aws-cli:latest
    depends_on:
      - minio
    entrypoint: ["/bin/sh", "-c"]
    command: >
      "sleep 10 && aws --endpoint-url http://minio:9000 s3 mb s3://kyc-documents"
    environment:
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin


  # Serviço da Análise de Crédito (Python)
  #ml-api:
  #  build: ./backend-ml-api # Aponta para a pasta do projeto Python
  #  ports:
  #    - "5000:5000"

  # Serviço do Frontend (React)
  #frontend:
  #  build: ./frontend # Aponta para a pasta do projeto React
  #  ports:
  #    - "3000:3000"
  #  depends_on:
  #    - core-api # O frontend depende da API principal
  frontend:
    build: ./frontend
    ports:
      - "3000:80" # Mapeia a porta 3000 da sua máquina para a porta 80 do container Nginx
    depends_on:
      - core-api


volumes:
  postgres_data:
  minio_data: